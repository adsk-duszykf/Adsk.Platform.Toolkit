// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.ACC.DataConnector.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Job : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account ID</summary>
        public Guid? AccountId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date and time the job completed execution (ISO 8601)</summary>
        public DateTimeOffset? CompletedAt { get; set; }
        /// <summary>The completion status of the job (only set when status is complete)</summary>
        public global::Autodesk.ACC.DataConnector.Models.Job_completionStatus? CompletionStatus { get; set; }
        /// <summary>The date and time the job was created (ISO 8601)</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The BIM 360 / ACC user ID of the user who created the data request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>The email address of the user who created the data request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedByEmail { get; set; }
#nullable restore
#else
        public string CreatedByEmail { get; set; }
#endif
        /// <summary>The ID of the job</summary>
        public Guid? Id { get; set; }
        /// <summary>The project ID (if applicable)</summary>
        public Guid? ProjectId { get; set; }
        /// <summary>The ID of the data request that spawned this job</summary>
        public Guid? RequestId { get; set; }
        /// <summary>The date and time the job started execution (ISO 8601)</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>The current status of the job</summary>
        public global::Autodesk.ACC.DataConnector.Models.Job_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.ACC.DataConnector.Models.Job"/> and sets the default values.
        /// </summary>
        public Job()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.ACC.DataConnector.Models.Job"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.ACC.DataConnector.Models.Job CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.ACC.DataConnector.Models.Job();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accountId", n => { AccountId = n.GetGuidValue(); } },
                { "completedAt", n => { CompletedAt = n.GetDateTimeOffsetValue(); } },
                { "completionStatus", n => { CompletionStatus = n.GetEnumValue<global::Autodesk.ACC.DataConnector.Models.Job_completionStatus>(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "createdBy", n => { CreatedBy = n.GetStringValue(); } },
                { "createdByEmail", n => { CreatedByEmail = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "projectId", n => { ProjectId = n.GetGuidValue(); } },
                { "requestId", n => { RequestId = n.GetGuidValue(); } },
                { "startedAt", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.ACC.DataConnector.Models.Job_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("accountId", AccountId);
            writer.WriteDateTimeOffsetValue("completedAt", CompletedAt);
            writer.WriteEnumValue<global::Autodesk.ACC.DataConnector.Models.Job_completionStatus>("completionStatus", CompletionStatus);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("createdBy", CreatedBy);
            writer.WriteStringValue("createdByEmail", CreatedByEmail);
            writer.WriteGuidValue("id", Id);
            writer.WriteGuidValue("projectId", ProjectId);
            writer.WriteGuidValue("requestId", RequestId);
            writer.WriteDateTimeOffsetValue("startedAt", StartedAt);
            writer.WriteEnumValue<global::Autodesk.ACC.DataConnector.Models.Job_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
