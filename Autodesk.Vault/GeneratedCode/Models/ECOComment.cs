// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// Change Order Comment object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ECOComment : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The createDate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreateDate { get; set; }
#nullable restore
#else
        public string CreateDate { get; set; }
#endif
        /// <summary>The createUserName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreateUserName { get; set; }
#nullable restore
#else
        public string CreateUserName { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The message property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>The numberOfAttachments property</summary>
        public double? NumberOfAttachments { get; set; }
        /// <summary>Change Order Comment object duplicate(ECOComment) to allow them to reference to each other</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.Vault.Models.ECOComment2? Parent { get; set; }
#nullable restore
#else
        public global::Autodesk.Vault.Models.ECOComment2 Parent { get; set; }
#endif
        /// <summary>The replies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.ECOComment2>? Replies { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.ECOComment2> Replies { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The subject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>The relative URL to access this object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.Vault.Models.ECOComment"/> and sets the default values.
        /// </summary>
        public ECOComment()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.ECOComment"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.Vault.Models.ECOComment CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.ECOComment();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createDate", n => { CreateDate = n.GetStringValue(); } },
                { "createUserName", n => { CreateUserName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "numberOfAttachments", n => { NumberOfAttachments = n.GetDoubleValue(); } },
                { "parent", n => { Parent = n.GetObjectValue<global::Autodesk.Vault.Models.ECOComment2>(global::Autodesk.Vault.Models.ECOComment2.CreateFromDiscriminatorValue); } },
                { "replies", n => { Replies = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.ECOComment2>(global::Autodesk.Vault.Models.ECOComment2.CreateFromDiscriminatorValue)?.AsList(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("createDate", CreateDate);
            writer.WriteStringValue("createUserName", CreateUserName);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("message", Message);
            writer.WriteDoubleValue("numberOfAttachments", NumberOfAttachments);
            writer.WriteObjectValue<global::Autodesk.Vault.Models.ECOComment2>("parent", Parent);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.ECOComment2>("replies", Replies);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("subject", Subject);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
