// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// Group extended object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class GroupExtended : global::Autodesk.Vault.Models.Group, IParsable
    {
        /// <summary>The accounts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.Account>? Accounts { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.Account> Accounts { get; set; }
#endif
        /// <summary>The attributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.ProfileAttribute>? Attributes { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.ProfileAttribute> Attributes { get; set; }
#endif
        /// <summary>User object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.Vault.Models.User? CreateUser { get; set; }
#nullable restore
#else
        public global::Autodesk.Vault.Models.User CreateUser { get; set; }
#endif
        /// <summary>The groupManagers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.User>? GroupManagers { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.User> GroupManagers { get; set; }
#endif
        /// <summary>The groups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.Group>? Groups { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.Group> Groups { get; set; }
#endif
        /// <summary>The roles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.Role>? Roles { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.Role> Roles { get; set; }
#endif
        /// <summary>The users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.User>? Users { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.User> Users { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.GroupExtended"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Autodesk.Vault.Models.GroupExtended CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.GroupExtended();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accounts", n => { Accounts = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.Account>(global::Autodesk.Vault.Models.Account.CreateFromDiscriminatorValue)?.AsList(); } },
                { "attributes", n => { Attributes = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.ProfileAttribute>(global::Autodesk.Vault.Models.ProfileAttribute.CreateFromDiscriminatorValue)?.AsList(); } },
                { "createUser", n => { CreateUser = n.GetObjectValue<global::Autodesk.Vault.Models.User>(global::Autodesk.Vault.Models.User.CreateFromDiscriminatorValue); } },
                { "groupManagers", n => { GroupManagers = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.User>(global::Autodesk.Vault.Models.User.CreateFromDiscriminatorValue)?.AsList(); } },
                { "groups", n => { Groups = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.Group>(global::Autodesk.Vault.Models.Group.CreateFromDiscriminatorValue)?.AsList(); } },
                { "roles", n => { Roles = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.Role>(global::Autodesk.Vault.Models.Role.CreateFromDiscriminatorValue)?.AsList(); } },
                { "users", n => { Users = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.User>(global::Autodesk.Vault.Models.User.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.Account>("accounts", Accounts);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.ProfileAttribute>("attributes", Attributes);
            writer.WriteObjectValue<global::Autodesk.Vault.Models.User>("createUser", CreateUser);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.User>("groupManagers", GroupManagers);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.Group>("groups", Groups);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.Role>("roles", Roles);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.User>("users", Users);
        }
    }
}
#pragma warning restore CS0618
