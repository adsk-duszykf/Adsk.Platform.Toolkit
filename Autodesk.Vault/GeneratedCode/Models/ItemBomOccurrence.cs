// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// BOM link master ID with which this occurrence is associated.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ItemBomOccurrence : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bomLinkMasterId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BomLinkMasterId { get; set; }
#nullable restore
#else
        public string BomLinkMasterId { get; set; }
#endif
        /// <summary>The value of the occurrence. Also known as the &apos;Detail Id.&apos;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DetailId { get; set; }
#nullable restore
#else
        public string DetailId { get; set; }
#endif
        /// <summary>A unique identifier for this occurrence within the Item BOM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The immediate parent. -1 means no parent occurrence.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentOccurrenceId { get; set; }
#nullable restore
#else
        public string ParentOccurrenceId { get; set; }
#endif
        /// <summary>The path to the occurrence in the BOM. The format is the list of Item Master IDs separated by the &apos;/&apos; delimiter.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Path { get; set; }
#nullable restore
#else
        public string Path { get; set; }
#endif
        /// <summary>The position on the BOM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Position { get; set; }
#nullable restore
#else
        public string Position { get; set; }
#endif
        /// <summary>The top most Item of the BOM.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RootItemId { get; set; }
#nullable restore
#else
        public string RootItemId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.Vault.Models.ItemBomOccurrence"/> and sets the default values.
        /// </summary>
        public ItemBomOccurrence()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.ItemBomOccurrence"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.Vault.Models.ItemBomOccurrence CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.ItemBomOccurrence();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bomLinkMasterId", n => { BomLinkMasterId = n.GetStringValue(); } },
                { "detailId", n => { DetailId = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "parentOccurrenceId", n => { ParentOccurrenceId = n.GetStringValue(); } },
                { "path", n => { Path = n.GetStringValue(); } },
                { "position", n => { Position = n.GetStringValue(); } },
                { "rootItemId", n => { RootItemId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("bomLinkMasterId", BomLinkMasterId);
            writer.WriteStringValue("detailId", DetailId);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("parentOccurrenceId", ParentOccurrenceId);
            writer.WriteStringValue("path", Path);
            writer.WriteStringValue("position", Position);
            writer.WriteStringValue("rootItemId", RootItemId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
