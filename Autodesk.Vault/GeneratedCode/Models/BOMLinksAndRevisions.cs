// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// BOM links and revisions object. Contains BOM related links between Items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BOMLinksAndRevisions : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Array of BOM components in this BOM </summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.BOMComponent>? BOMComponents { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.BOMComponent> BOMComponents { get; set; }
#endif
        /// <summary>The associations between the Items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.ItemBomLink>? ItemBomLinks { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.ItemBomLink> ItemBomLinks { get; set; }
#endif
        /// <summary>An array of Items.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.ItemVersion>? ItemVersions { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.ItemVersion> ItemVersions { get; set; }
#endif
        /// <summary>An array of occurrences.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.ItemBomOccurrence>? Occurrences { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.ItemBomOccurrence> Occurrences { get; set; }
#endif
        /// <summary>If true, reference designators are available.</summary>
        public bool? ReferenceDesignatorsAvailable { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.Vault.Models.BOMLinksAndRevisions"/> and sets the default values.
        /// </summary>
        public BOMLinksAndRevisions()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.BOMLinksAndRevisions"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.Vault.Models.BOMLinksAndRevisions CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.BOMLinksAndRevisions();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bOMComponents", n => { BOMComponents = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.BOMComponent>(global::Autodesk.Vault.Models.BOMComponent.CreateFromDiscriminatorValue)?.AsList(); } },
                { "itemBomLinks", n => { ItemBomLinks = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemBomLink>(global::Autodesk.Vault.Models.ItemBomLink.CreateFromDiscriminatorValue)?.AsList(); } },
                { "itemVersions", n => { ItemVersions = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemVersion>(global::Autodesk.Vault.Models.ItemVersion.CreateFromDiscriminatorValue)?.AsList(); } },
                { "occurrences", n => { Occurrences = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemBomOccurrence>(global::Autodesk.Vault.Models.ItemBomOccurrence.CreateFromDiscriminatorValue)?.AsList(); } },
                { "referenceDesignatorsAvailable", n => { ReferenceDesignatorsAvailable = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.BOMComponent>("bOMComponents", BOMComponents);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemBomLink>("itemBomLinks", ItemBomLinks);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemVersion>("itemVersions", ItemVersions);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.ItemBomOccurrence>("occurrences", Occurrences);
            writer.WriteBoolValue("referenceDesignatorsAvailable", ReferenceDesignatorsAvailable);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
