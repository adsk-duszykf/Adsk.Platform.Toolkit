// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// Job object. A job is a task that is run by the job processor.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Job : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>A description of the job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>A unique identifier for the job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>In a multi-site environment, this property tells if the file is on the local site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IsOnSite { get; set; }
#nullable restore
#else
        public string IsOnSite { get; set; }
#endif
        /// <summary>The job type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobType { get; set; }
#nullable restore
#else
        public string JobType { get; set; }
#endif
        /// <summary>An array of parameters which provide metadata about the job.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.Vault.Models.Job_params? Params { get; set; }
#nullable restore
#else
        public global::Autodesk.Vault.Models.Job_params Params { get; set; }
#endif
        /// <summary>The priority of the job. A lower number means a higher priority. 1 is the lowest possible number.</summary>
        public double? Priority { get; set; }
        /// <summary>The status of the job:- ``Ready`` - The job is ready to be run.- ``Running`` - The job is currently running.- ``Success`` - The job has completed successfully.- ``Failure`` - The job has failed.</summary>
        public global::Autodesk.Vault.Models.Job_status? Status { get; set; }
        /// <summary>The relative URL to access this object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.Vault.Models.Job"/> and sets the default values.
        /// </summary>
        public Job()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.Job"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.Vault.Models.Job CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.Job();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isOnSite", n => { IsOnSite = n.GetStringValue(); } },
                { "jobType", n => { JobType = n.GetStringValue(); } },
                { "params", n => { Params = n.GetObjectValue<global::Autodesk.Vault.Models.Job_params>(global::Autodesk.Vault.Models.Job_params.CreateFromDiscriminatorValue); } },
                { "priority", n => { Priority = n.GetDoubleValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Autodesk.Vault.Models.Job_status>(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("isOnSite", IsOnSite);
            writer.WriteStringValue("jobType", JobType);
            writer.WriteObjectValue<global::Autodesk.Vault.Models.Job_params>("params", Params);
            writer.WriteDoubleValue("priority", Priority);
            writer.WriteEnumValue<global::Autodesk.Vault.Models.Job_status>("status", Status);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
