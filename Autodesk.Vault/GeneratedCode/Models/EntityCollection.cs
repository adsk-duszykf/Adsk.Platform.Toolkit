// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Autodesk.Vault.Models
{
    /// <summary>
    /// Entity collection object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EntityCollection : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The included property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.Vault.Models.EntityCollection_included? Included { get; set; }
#nullable restore
#else
        public global::Autodesk.Vault.Models.EntityCollection_included Included { get; set; }
#endif
        /// <summary>Cursor-based pagination object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Autodesk.Vault.Models.CursorBasedPagination? Pagination { get; set; }
#nullable restore
#else
        public global::Autodesk.Vault.Models.CursorBasedPagination Pagination { get; set; }
#endif
        /// <summary>The results property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results>? Results { get; set; }
#nullable restore
#else
        public List<global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results> Results { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Autodesk.Vault.Models.EntityCollection"/> and sets the default values.
        /// </summary>
        public EntityCollection()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Autodesk.Vault.Models.EntityCollection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Autodesk.Vault.Models.EntityCollection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Autodesk.Vault.Models.EntityCollection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "included", n => { Included = n.GetObjectValue<global::Autodesk.Vault.Models.EntityCollection_included>(global::Autodesk.Vault.Models.EntityCollection_included.CreateFromDiscriminatorValue); } },
                { "pagination", n => { Pagination = n.GetObjectValue<global::Autodesk.Vault.Models.CursorBasedPagination>(global::Autodesk.Vault.Models.CursorBasedPagination.CreateFromDiscriminatorValue); } },
                { "results", n => { Results = n.GetCollectionOfObjectValues<global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results>(global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Autodesk.Vault.Models.EntityCollection_included>("included", Included);
            writer.WriteObjectValue<global::Autodesk.Vault.Models.CursorBasedPagination>("pagination", Pagination);
            writer.WriteCollectionOfObjectValues<global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results>("results", Results);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Autodesk.Vault.Models.ChangeOrder"/>, <see cref="global::Autodesk.Vault.Models.ChangeOrderExtended"/>, <see cref="global::Autodesk.Vault.Models.FileVersion"/>, <see cref="global::Autodesk.Vault.Models.FileVersionExtended"/>, <see cref="global::Autodesk.Vault.Models.Folder"/>, <see cref="global::Autodesk.Vault.Models.FolderExtended"/>, <see cref="global::Autodesk.Vault.Models.ItemVersion"/>, <see cref="global::Autodesk.Vault.Models.LinkEntity"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EntityCollection_results : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.ChangeOrder"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.ChangeOrder? ChangeOrder { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.ChangeOrder ChangeOrder { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.ChangeOrderExtended"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.ChangeOrderExtended? ChangeOrderExtended { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.ChangeOrderExtended ChangeOrderExtended { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.FileVersion"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.FileVersion? FileVersion { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.FileVersion FileVersion { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.FileVersionExtended"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.FileVersionExtended? FileVersionExtended { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.FileVersionExtended FileVersionExtended { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.Folder"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.Folder? Folder { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.Folder Folder { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.FolderExtended"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.FolderExtended? FolderExtended { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.FolderExtended FolderExtended { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.ItemVersion"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.ItemVersion? ItemVersion { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.ItemVersion ItemVersion { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Autodesk.Vault.Models.LinkEntity"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Autodesk.Vault.Models.LinkEntity? LinkEntity { get; set; }
#nullable restore
#else
            public global::Autodesk.Vault.Models.LinkEntity LinkEntity { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var result = new global::Autodesk.Vault.Models.EntityCollection.EntityCollection_results();
                result.ChangeOrder = new global::Autodesk.Vault.Models.ChangeOrder();
                result.ChangeOrderExtended = new global::Autodesk.Vault.Models.ChangeOrderExtended();
                result.FileVersion = new global::Autodesk.Vault.Models.FileVersion();
                result.FileVersionExtended = new global::Autodesk.Vault.Models.FileVersionExtended();
                result.Folder = new global::Autodesk.Vault.Models.Folder();
                result.FolderExtended = new global::Autodesk.Vault.Models.FolderExtended();
                result.ItemVersion = new global::Autodesk.Vault.Models.ItemVersion();
                result.LinkEntity = new global::Autodesk.Vault.Models.LinkEntity();
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(ChangeOrder != null || ChangeOrderExtended != null || FileVersion != null || FileVersionExtended != null || Folder != null || FolderExtended != null || ItemVersion != null || LinkEntity != null)
                {
                    return ParseNodeHelper.MergeDeserializersForIntersectionWrapper(ChangeOrder, ChangeOrderExtended, FileVersion, FileVersionExtended, Folder, FolderExtended, ItemVersion, LinkEntity);
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                writer.WriteObjectValue<global::Autodesk.Vault.Models.ChangeOrder>(null, ChangeOrder, ChangeOrderExtended, FileVersion, FileVersionExtended, Folder, FolderExtended, ItemVersion, LinkEntity);
            }
        }
    }
}
#pragma warning restore CS0618
